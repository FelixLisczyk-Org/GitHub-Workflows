name: Prepare Xcode Build
description: Prepare Xcode Build
inputs:
  p12-file-development:
    description: "Development Certificate File"
  p12-file-development-password:
    description: "Development Certificate Password"
  p12-file-distribution:
    description: "Distribution Certificate File"
  p12-file-distribution-password:
    description: "Distribution Certificate Password"
  ssh-private-key:
    description: "Private SSH Key"
runs:
  using: "composite"
  steps:
    - name: Checkout
      uses: actions/checkout@v3
    - name: (Cloud) Set Xcode Version
      uses: maxim-lobanov/setup-xcode@v1
      with:
        xcode-version: latest-stable
      if: contains(runner.workspace, '/Users/runner/')
    - name: Import Development Certificate
      id: create_keychain
      uses: apple-actions/import-codesign-certs@v1
      with:
        p12-file-base64: ${{ inputs.p12-file-development }}
        p12-password: ${{ inputs.p12-file-development-password }}
      if: inputs.p12-file-development != '' && inputs.p12-file-development-password != ''
    - name: Import Distribution Certificate
      uses: apple-actions/import-codesign-certs@v1
      with:
        create-keychain: false
        keychain-password: "${{ steps.create_keychain.outputs.keychain-password }}"
        p12-file-base64: ${{ inputs.p12-file-distribution }}
        p12-password: ${{ inputs.p12-file-distribution-password }}
      if: inputs.p12-file-distribution != '' && inputs.p12-file-distribution-password != ''
    - name: (Cloud) Load SSH Private Key
      uses: webfactory/ssh-agent@v0.5.4
      with:
        ssh-private-key: ${{ inputs.ssh-private-key }}
      if: contains(runner.workspace, '/Users/runner/') && inputs.ssh-private-key != ''
    - name: Clone Swift Packages over SSH
      run: git config --global url."git@github.com:".insteadOf "https://github.com/"
      shell: bash
    - name: (Cloud) Install Build Tools
      run: brew update && brew install mint swiftformat swiftgen && echo "$HOME/.mint/bin" >> $GITHUB_PATH && mint install yonaskolb/xcodegen@2.32.0
      shell: bash
      if: contains(runner.workspace, '/Users/runner/')
    - name: Install fastlane
      run: bundle install
      shell: bash
